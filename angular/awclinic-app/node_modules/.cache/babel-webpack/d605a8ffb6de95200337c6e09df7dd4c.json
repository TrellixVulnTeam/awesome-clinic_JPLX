{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eugen/awesome-clinic/angular/awclinic-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(router, fb, snackBar, conn, route) {\n    var _this = this;\n\n    this.router = router;\n    this.snackBar = snackBar;\n    this.conn = conn;\n    this.route = route;\n    this.showSpinner = false;\n    this.disabledButton = false;\n    this.errors = \"\";\n\n    this.submitForm = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* ($ev, value) {\n        _this.errors = \"\";\n        $ev.preventDefault();\n\n        for (let c in _this.valForm.controls) {\n          _this.valForm.controls[c].markAsTouched();\n        }\n\n        if (_this.valForm.valid) {\n          console.log(_this.valForm.value);\n          let resultado = yield _this.conn.backend_call(\"api/profile/\", false, \"POST\", _this.valForm.value);\n\n          if (resultado.error) {\n            _this.snackBar.open('The following errors has been detected', 'Close');\n\n            _this.errors = JSON.stringify(resultado.error);\n          } else {\n            _this.snackBar.open('User created please login', 'Close');\n\n            _this.router.navigate([\"login\"]);\n          }\n        }\n      });\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.valForm = fb.group({\n      'username': ['', Validators.compose([Validators.required])],\n      'password1': ['', Validators.compose([Validators.required])],\n      'password2': ['', Validators.compose([Validators.required])],\n      'first_name': ['', Validators.compose([Validators.required])],\n      'last_name': ['', Validators.compose([Validators.required])],\n      'email': ['', Validators.compose([Validators.required])],\n      'address': ['', Validators.compose([Validators.required])],\n      'phone': ['', Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\")])]\n    });\n  }\n\n  ngOnInit() {}\n\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"sources":["C:\\Users\\eugen\\awesome-clinic\\angular\\awclinic-app\\src\\app\\register\\register.component.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConnectionService } from '../connection.service';\nimport { Router, ActivatedRoute  } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  valForm: FormGroup;\n  showSpinner: boolean = false;\n  disabledButton: boolean = false;\n  errors = \"\"\n\n  constructor(private router: Router, fb: FormBuilder, public snackBar: MatSnackBar,public conn: ConnectionService, private route: ActivatedRoute) {\n\n    this.valForm = fb.group({\n      'username': ['', Validators.compose([Validators.required])],\n      'password1': ['', Validators.compose([Validators.required])],\n      'password2': ['', Validators.compose([Validators.required])],\n      'first_name': ['', Validators.compose([Validators.required])],\n      'last_name': ['', Validators.compose([Validators.required])],\n      'email': ['', Validators.compose([Validators.required])],\n      'address': ['', Validators.compose([Validators.required])],\n      'phone': ['', Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\")])]\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  submitForm = async ($ev: any, value: any) => {\n\n    this.errors = \"\"\n    $ev.preventDefault();\n\n    for (let c in this.valForm.controls) {\n        this.valForm.controls[c].markAsTouched();\n    }\n\n    if (this.valForm.valid) \n    {\n      console.log(this.valForm.value)\n      let resultado:any = (await this.conn.backend_call(\"api/profile/\", false, \"POST\", this.valForm.value))  \n\n      if (resultado.error)\n      {\n        this.snackBar.open('The following errors has been detected', 'Close');\n        this.errors = JSON.stringify(resultado.error);\n      }\n      else\n      {\n        this.snackBar.open('User created please login', 'Close');\n        this.router.navigate([\"login\"])\n      }\n\n    }\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}