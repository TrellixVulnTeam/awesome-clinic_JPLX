{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eugen/awesome-clinic/angular/awclinic-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../connection.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-spinner\";\n\nfunction RegisterComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" First name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Last name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Address is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Address is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debe ser un correo electr\\u00F3nico valido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Repeat password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_spinner_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 15);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 40);\n  }\n}\n\nexport class RegisterComponent {\n  constructor(router, fb, snackBar, conn, route) {\n    var _this = this;\n\n    this.router = router;\n    this.snackBar = snackBar;\n    this.conn = conn;\n    this.route = route;\n    this.showSpinner = false;\n    this.disabledButton = false;\n\n    this.submitForm = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* ($ev, value) {\n        $ev.preventDefault();\n\n        for (let c in _this.valForm.controls) {\n          _this.valForm.controls[c].markAsTouched();\n        }\n\n        if (_this.valForm.valid) {\n          console.log(_this.valForm.value);\n          let resultado = yield _this.conn.backend_call(\"api/profile/\", false, \"POST\", _this.valForm.value);\n\n          if (resultado.error) {\n            _this.snackBar.open('The following errors has been detected', 'Close');\n\n            console.log(resultado.error);\n          } else {\n            _this.snackBar.open('User created please login', 'Close');\n\n            _this.router.navigate([\"login\"]);\n          }\n        }\n      });\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.valForm = fb.group({\n      'username': ['', Validators.compose([Validators.required])],\n      'password1': ['', Validators.compose([Validators.required])],\n      'password2': ['', Validators.compose([Validators.required])],\n      'first_name': ['', Validators.compose([Validators.required])],\n      'last_name': ['', Validators.compose([Validators.required])],\n      'email': ['', Validators.compose([Validators.required])],\n      'address': ['', Validators.compose([Validators.required])],\n      'phone': ['', Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\")])]\n    });\n  }\n\n  ngOnInit() {}\n\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.ConnectionService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 58,\n  vars: 11,\n  consts: [[3, \"formGroup\", \"submit\"], [1, \"input-form-out\"], [\"formControlName\", \"first_name\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"First Name\", 1, \"form-input\"], [4, \"ngIf\"], [\"formControlName\", \"last_name\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Last Name\", 1, \"form-input\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"type\", \"email\", \"placeholder\", \"Email\", 1, \"form-input\"], [\"formControlName\", \"address\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"address\", 1, \"form-input\"], [\"matPrefix\", \"\"], [\"formControlName\", \"phone\", \"matInput\", \"\", \"type\", \"tel\", \"placeholder\", \"555-555-1234\", 1, \"form-input\"], [\"formControlName\", \"username\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Username\", 1, \"form-input\"], [\"formControlName\", \"password1\", \"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-input\"], [\"formControlName\", \"password2\", \"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Repeat password\", 1, \"form-input\"], [\"routerLink\", \"/login\", 1, \"btn-f-width\", \"btn-separated\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"btn-f-width\", \"btn-separated\", 2, \"margin-top\", \"20px\"], [\"style\", \"margin-top: 20px;\", 3, \"diameter\", 4, \"ngIf\"], [2, \"margin-top\", \"20px\", 3, \"diameter\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\");\n      i0.ɵɵelementStart(1, \"mat-card-title\");\n      i0.ɵɵtext(2, \"User Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n      i0.ɵɵtext(4, \"Register to login on our app\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_5_listener($event) {\n        return ctx.submitForm($event, ctx.valForm.value);\n      });\n      i0.ɵɵelementStart(6, \"mat-form-field\", 1);\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementStart(8, \"mat-hint\");\n      i0.ɵɵtext(9, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, RegisterComponent_mat_error_10_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 1);\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵelementStart(13, \"mat-hint\");\n      i0.ɵɵtext(14, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, RegisterComponent_mat_error_15_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 1);\n      i0.ɵɵelement(17, \"input\", 5);\n      i0.ɵɵelementStart(18, \"mat-hint\");\n      i0.ɵɵtext(19, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, RegisterComponent_mat_error_20_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\", 1);\n      i0.ɵɵelement(22, \"input\", 6);\n      i0.ɵɵelementStart(23, \"mat-hint\");\n      i0.ɵɵtext(24, \"Address specify street and number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, RegisterComponent_mat_error_25_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(27, \"span\", 7);\n      i0.ɵɵtext(28, \"+1 \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 8);\n      i0.ɵɵelementStart(30, \"mat-hint\");\n      i0.ɵɵtext(31, \"Address specify street and number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, RegisterComponent_mat_error_32_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"mat-form-field\", 1);\n      i0.ɵɵelement(34, \"input\", 9);\n      i0.ɵɵelementStart(35, \"mat-hint\");\n      i0.ɵɵtext(36, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(37, RegisterComponent_mat_error_37_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵtemplate(38, RegisterComponent_mat_error_38_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-form-field\", 1);\n      i0.ɵɵelement(40, \"input\", 10);\n      i0.ɵɵelementStart(41, \"mat-hint\");\n      i0.ɵɵtext(42, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(43, RegisterComponent_mat_error_43_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"mat-form-field\", 1);\n      i0.ɵɵelement(45, \"input\", 11);\n      i0.ɵɵelementStart(46, \"mat-hint\");\n      i0.ɵɵtext(47, \"Repeat password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(48, RegisterComponent_mat_error_48_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"br\");\n      i0.ɵɵelementStart(50, \"span\");\n      i0.ɵɵtext(51, \" Already have an account \");\n      i0.ɵɵelementStart(52, \"a\", 12);\n      i0.ɵɵtext(53, \"Login here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"br\");\n      i0.ɵɵelementStart(55, \"button\", 13);\n      i0.ɵɵtext(56, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(57, RegisterComponent_mat_spinner_57_Template, 1, 1, \"mat-spinner\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.valForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"first_name\"].hasError(\"required\") && (ctx.valForm.controls[\"first_name\"].dirty || ctx.valForm.controls[\"first_name\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"last_name\"].hasError(\"required\") && (ctx.valForm.controls[\"last_name\"].dirty || ctx.valForm.controls[\"last_name\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"email\"].hasError(\"required\") && (ctx.valForm.controls[\"email\"].dirty || ctx.valForm.controls[\"email\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"address\"].hasError(\"required\") && (ctx.valForm.controls[\"address\"].dirty || ctx.valForm.controls[\"address\"].touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"address\"].hasError(\"required\") && (ctx.valForm.controls[\"address\"].dirty || ctx.valForm.controls[\"address\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"username\"].hasError(\"required\") && (ctx.valForm.controls[\"username\"].dirty || ctx.valForm.controls[\"username\"].touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"username\"].hasError(\"username\") && (ctx.valForm.controls[\"username\"].dirty || ctx.valForm.controls[\"username\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"password1\"].hasError(\"required\") && (ctx.valForm.controls[\"password1\"].dirty || ctx.valForm.controls[\"password1\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"password2\"].hasError(\"required\") && (ctx.valForm.controls[\"password2\"].dirty || ctx.valForm.controls[\"password2\"].touched));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n    }\n  },\n  directives: [i5.MatCard, i5.MatCardTitle, i5.MatCardSubtitle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i6.MatFormField, i2.DefaultValueAccessor, i7.MatInput, i2.NgControlStatus, i2.FormControlName, i6.MatHint, i8.NgIf, i6.MatPrefix, i1.RouterLinkWithHref, i9.MatButton, i6.MatError, i10.MatSpinner],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\eugen\\awesome-clinic\\angular\\awclinic-app\\src\\app\\register\\register.component.ts","C:\\Users\\eugen\\awesome-clinic\\angular\\awclinic-app\\src\\app\\register\\register.component.html"],"names":[],"mappings":"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","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConnectionService } from '../connection.service';\nimport { Router, ActivatedRoute  } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  valForm: FormGroup;\n  showSpinner: boolean = false;\n  disabledButton: boolean = false;\n\n  constructor(private router: Router, fb: FormBuilder, public snackBar: MatSnackBar,public conn: ConnectionService, private route: ActivatedRoute) {\n\n    this.valForm = fb.group({\n      'username': ['', Validators.compose([Validators.required])],\n      'password1': ['', Validators.compose([Validators.required])],\n      'password2': ['', Validators.compose([Validators.required])],\n      'first_name': ['', Validators.compose([Validators.required])],\n      'last_name': ['', Validators.compose([Validators.required])],\n      'email': ['', Validators.compose([Validators.required])],\n      'address': ['', Validators.compose([Validators.required])],\n      'phone': ['', Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\")])]\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  submitForm = async ($ev: any, value: any) => {\n    $ev.preventDefault();\n\n    for (let c in this.valForm.controls) {\n        this.valForm.controls[c].markAsTouched();\n    }\n\n    if (this.valForm.valid) \n    {\n      console.log(this.valForm.value)\n      let resultado:any = (await this.conn.backend_call(\"api/profile/\", false, \"POST\", this.valForm.value))  \n\n      if (resultado.error)\n      {\n        this.snackBar.open('The following errors has been detected', 'Close');\n        console.log(resultado.error)\n      }\n      else\n      {\n        this.snackBar.open('User created please login', 'Close');\n        this.router.navigate([\"login\"])\n      }\n\n    }\n  }\n\n}\n","<mat-card>\n    <mat-card-title>User Registration</mat-card-title>\n    <mat-card-subtitle>Register to login on our app</mat-card-subtitle>\n\n    <form [formGroup]=\"valForm\"  (submit)=\"submitForm($event, valForm.value)\">\n        <mat-form-field class=\"input-form-out\">\n            <input formControlName=\"first_name\" matInput type=\"text\" class=\"form-input\" placeholder=\"First Name\">\n    \n            <mat-hint>First Name</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['first_name'].hasError('required') && (valForm.controls['first_name'].dirty || valForm.controls['first_name'].touched)\">\n              First name is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-form-out\">\n            <input formControlName=\"last_name\" matInput type=\"text\" class=\"form-input\" placeholder=\"Last Name\">\n    \n            <mat-hint>Last Name</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['last_name'].hasError('required') && (valForm.controls['last_name'].dirty || valForm.controls['last_name'].touched)\">\n              Last name is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-form-out\">\n            <input formControlName=\"email\" matInput type=\"email\" class=\"form-input\" placeholder=\"Email\">\n    \n            <mat-hint>Email</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['email'].hasError('required') && (valForm.controls['email'].dirty || valForm.controls['email'].touched)\">\n              Email is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-form-out\">\n            <input formControlName=\"address\" matInput type=\"text\" class=\"form-input\" placeholder=\"address\">\n    \n            <mat-hint>Address specify street and number</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['address'].hasError('required') && (valForm.controls['address'].dirty || valForm.controls['address'].touched)\">\n              Address is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-form-out\">\n            <span matPrefix>+1 &nbsp;</span>\n            <input formControlName=\"phone\" matInput type=\"tel\" class=\"form-input\" placeholder=\"555-555-1234\">\n    \n            <mat-hint>Address specify street and number</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['address'].hasError('required') && (valForm.controls['address'].dirty || valForm.controls['address'].touched)\">\n              Address is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-form-out\"> \n            <input formControlName=\"username\" matInput type=\"text\" class=\"form-input\" placeholder=\"Username\">\n    \n            <mat-hint>Username</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['username'].hasError('required') && (valForm.controls['username'].dirty || valForm.controls['username'].touched)\">\n              Username is <strong>required</strong>\n            </mat-error>\n    \n            <mat-error *ngIf=\"valForm.controls['username'].hasError('username') && (valForm.controls['username'].dirty || valForm.controls['username'].touched)\">                                          Debe ser un correo electrónico valido\n            </mat-error>\n        </mat-form-field>\n    \n        <mat-form-field class=\"input-form-out\">\n            <input formControlName=\"password1\" matInput type=\"password\" class=\"form-input\" placeholder=\"Password\">\n    \n            <mat-hint>Password</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['password1'].hasError('required') && (valForm.controls['password1'].dirty || valForm.controls['password1'].touched)\">\n              Password is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n\n       <mat-form-field class=\"input-form-out\">\n            <input formControlName=\"password2\" matInput type=\"password\" class=\"form-input\" placeholder=\"Repeat password\">\n    \n            <mat-hint>Repeat password</mat-hint>\n    \n            <mat-error *ngIf=\"valForm.controls['password2'].hasError('required') && (valForm.controls['password2'].dirty || valForm.controls['password2'].touched)\">\n              Repeat password is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n    \n        <br>\n        <span> Already have an account <a class=\"btn-f-width btn-separated\"  routerLink=\"/login\">Login here</a> </span>\n\n        <br>\n    \n        <button mat-raised-button color=\"primary\" type=\"submit\" class=\"btn-f-width btn-separated\" style=\"margin-top: 20px;\">Register</button>\n    \n        <mat-spinner *ngIf=\"showSpinner\" [diameter]=\"40\" style=\"margin-top: 20px;\"></mat-spinner>\n      </form>\n\n</mat-card>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}