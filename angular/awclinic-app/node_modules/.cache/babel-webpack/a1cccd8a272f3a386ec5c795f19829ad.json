{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let ConnectionService = /*#__PURE__*/(() => {\n  class ConnectionService {\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n\n      this.backend_call = (url, authorization, method, data) => {\n        const endpoint = `${ConnectionService.URL_BASE}${url}`;\n        var options = new HttpHeaders();\n\n        if (authorization) {\n          let token = this.get_token();\n          options = {\n            headers: new HttpHeaders({\n              Authorization: 'Bearer ' + token\n            })\n          };\n        }\n\n        return new Promise((resolve, reject) => {\n          if (method == \"GET\") this.http.get(endpoint, options).subscribe(data => {\n            resolve(data);\n          }, error => {\n            resolve(error);\n          });\n          if (method == \"POST\") this.http.post(endpoint, data, options).subscribe(data => {\n            resolve(data);\n          }, error => {\n            resolve(error);\n          });\n          if (method == \"PUT\") this.http.put(endpoint, data, options).subscribe(data => {\n            resolve(data);\n          }, error => {\n            resolve(error);\n          });\n          if (method == \"DELETE\") this.http.delete(endpoint, options).subscribe(data => {\n            resolve(data);\n          }, error => {\n            resolve(error);\n          });\n        });\n      };\n\n      this.get_token = () => {\n        return localStorage.getItem('token');\n      };\n\n      this.set_token = token => {\n        return localStorage.setItem('token', token);\n      };\n\n      this.is_loggedin = () => {\n        if (localStorage.getItem('token') == null) return false;else return true;\n      };\n\n      this.remove_token = () => {\n        return localStorage.removeItem(\"token\");\n      };\n    }\n\n  }\n\n  ConnectionService.URL_BASE = 'http://localhost/';\n\n  ConnectionService.ɵfac = function ConnectionService_Factory(t) {\n    return new (t || ConnectionService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  ConnectionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnectionService,\n    factory: ConnectionService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConnectionService;\n})();","map":null,"metadata":{},"sourceType":"module"}