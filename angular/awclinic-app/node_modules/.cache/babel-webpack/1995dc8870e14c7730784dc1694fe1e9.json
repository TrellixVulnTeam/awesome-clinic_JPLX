{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eugen/awesome-clinic/angular/awclinic-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../connection.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-spinner\";\n\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debe ser un correo electr\\u00F3nico valido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_spinner_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 8);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 40);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, fb, snackBar, conn, route) {\n      var _this = this;\n\n      this.router = router;\n      this.snackBar = snackBar;\n      this.conn = conn;\n      this.route = route;\n      this.showSpinner = false;\n      this.disabledButton = false;\n      this.from = \"\";\n\n      this.submitForm = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* ($ev, value) {\n          $ev.preventDefault();\n\n          for (let c in _this.valForm.controls) {\n            _this.valForm.controls[c].markAsTouched();\n          }\n\n          if (_this.valForm.valid) {\n            let resultado = yield _this.conn.backend_call(\"api/login/\", false, \"POST\", _this.valForm.value);\n            console.log(\"aqui\");\n\n            if (resultado.error) {\n              _this.snackBar.open('Invalid credentials', 'Close');\n            } else {\n              _this.snackBar.open('Welcome', 'Close');\n\n              _this.conn.set_token(resultado.access);\n\n              if (_this.from == \"\") _this.router.navigate([_this.from]);else _this.router.navigate([\"profile\"]);\n            }\n          }\n        });\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      this.valForm = fb.group({\n        'username': ['', Validators.compose([Validators.required])],\n        'password': ['', Validators.compose([Validators.required])]\n      });\n    }\n\n    ngOnInit() {\n      this.from = this.route.snapshot.paramMap.get(\"from\");\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.ConnectionService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 6,\n    consts: [[3, \"formGroup\", \"submit\"], [1, \"input-form-out\"], [\"formControlName\", \"username\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Username\", 1, \"form-input\"], [4, \"ngIf\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-input\"], [\"routerLink\", \"/register\", 1, \"btn-f-width\", \"btn-separated\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"btn-f-width\", \"btn-separated\", 2, \"margin-top\", \"20px\", 3, \"disabled\"], [\"style\", \" margin-top: 20px;\", 3, \"diameter\", 4, \"ngIf\"], [2, \"margin-top\", \"20px\", 3, \"diameter\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n        i0.ɵɵtext(4, \"Login to access all your benefits\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_5_listener($event) {\n          return ctx.submitForm($event, ctx.valForm.value);\n        });\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1);\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementStart(8, \"mat-hint\");\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 1);\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementStart(14, \"mat-hint\");\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"span\");\n        i0.ɵɵtext(19, \" Dont have an account? \");\n        i0.ɵɵelementStart(20, \"a\", 5);\n        i0.ɵɵtext(21, \"Sing up here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"button\", 6);\n        i0.ɵɵtext(24, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, LoginComponent_mat_spinner_25_Template, 1, 1, \"mat-spinner\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.valForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"username\"].hasError(\"required\") && (ctx.valForm.controls[\"username\"].dirty || ctx.valForm.controls[\"username\"].touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"username\"].hasError(\"username\") && (ctx.valForm.controls[\"username\"].dirty || ctx.valForm.controls[\"username\"].touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.valForm.controls[\"password\"].hasError(\"required\") && (ctx.valForm.controls[\"password\"].dirty || ctx.valForm.controls[\"password\"].touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", ctx.disabledButton);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    directives: [i5.MatCard, i5.MatCardTitle, i5.MatCardSubtitle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i6.MatFormField, i2.DefaultValueAccessor, i7.MatInput, i2.NgControlStatus, i2.FormControlName, i6.MatHint, i8.NgIf, i1.RouterLinkWithHref, i9.MatButton, i6.MatError, i10.MatSpinner],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}